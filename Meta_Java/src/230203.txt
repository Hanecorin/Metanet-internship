### 클래스 다이어그램

	클래스 다이어그램은 클래스와 인터페이스의 특성 및 제약조건, 관계(연관, 상속, 의존 등)를 표현한다.
	
		구현 단계의 상세화
			-static operation과 같이 구현 단계에서 볼 수 있는 상세한 정보까지 표현함(리턴타입, 파라미터, 정적 오퍼레이션 등 표현)
			
		
		프로퍼티
			-연관(Associations)
				- 일반적으로 참조 객체인 경우
				- Role Name:연관의 형태를 명확히 하기 위해 역할 이름을 가짐
				- Navigability:화살표를 가리키는 방향에 있는 클래스를 탐색하거나
				
		집합(Agreegation)과 합성(Composition)은 전체와 부분(whole-or-part-of)의 관계를 나타낸다.
			- 전체-부분의 관계, 얼마나 더 끈끈한가.
			
		합성은 집합의 강한 형태
			- 합성에서 하나의 객체는 어느 한 순간에 단지 한 객체만의 부분이 되며 다른 객체와 공유될 수 없다. (Sharing)
			- 합성에서 전체(whole) 객체는 부분(part) 객체의 생성과 소멸을 관리한다. (Life cycle)
			
		(UML 표시)	
			하얀색 = 집합
			검은색 = 합성
			--->(점선) = 의존
			실선  = 연관
			+ = 포함
			실선+빈삼각형  = 상속
			점선+빈삼갹형 = 실현
			
			
	정적 필드와 메소드
		- 정적 필드
			- 인스턴스 변수에 static을 붙이면 정적 필드가 됩니다.
			- 정적필드는 해당 클래스의 모든 인스턴스들이 공유하는 클래스 변수입니다.
			- 정적필드는 객체를 생성하지 않아도 필드의 값을 사용할 수 있습니다.
				
			

		- 정적 정수
			- static final
			
		- 정적 메소드는 static으로 선언된 메소드로써 인스턴스 없이도 호출할 수 있습니다.
			- 정적 메소드는 인스턴스 필드에는 접근할 수 없고, 정적 필드에만 접근할 수 있습니다.
			- 정적 메소드는 객체를 통해 사용될 수 있지만, 반드시 클래스명과 함께 사용하기 바랍니다.
			
		 
	상속
	
		- 자식이 생성되면 부모의 디폴트 생성자도 같이생성
		- 자식의 데이터값을 부모로 보내기위해 super 함수를 사용
		
		
	Java (최소 알아야 할거)
	-> 배열, String
	-> 객체지향(도메인, 관계)
	-> Collection(List)
		
		
		
		
		
		
		
		